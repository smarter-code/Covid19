@page "/patients"

@using Covid19.Data
@using Covid19.Service
@inject IPatientService service

<h1>Patients</h1>


@if (patients == null)
{
    <p><em>Loading patients from the database</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Gender</th>
                <th>Date Of Birth</th>
                <th>Address</th>
                <th>Phone Number</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var patient in patients)
            {
                <tr>
                    <td>@patient.Id</td>
                    <td>@patient.Name</td>
                    <td>@patient.Gender</td>
                    <td>@patient.DateOfBirth?.ToShortDateString()</td>
                    <td>@patient.Address</td>
                    <td>@patient.PhoneNumber</td>
                    <td>@patient.Status</td>
                    <td><input type="button" class="btn btn-primary" @onclick="(() => PrepareForEdit(patientObject))" data-toggle="modal" data-target="#patientModal" value="Edit" /></td>

                </tr>
            }
        </tbody>
    </table>
}
<div>
    <input type="button" data-toggle="modal" data-target="#patientModal" class="btn btn-primary" value="Add Patient" @onclick="(() => InitializePatientObject())" />
</div>

<PatientDetail PatientObject=patientObject DataChanged="@DataChanged">
    <CustomHeader>@customHeader</CustomHeader>
</PatientDetail>

@code {
    List<Patient> patients;
    Patient patientObject = new Patient();
    string customHeader = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        patients = await service.Get();

    }

    private void InitializePatientObject()
    {

        patientObject = new Patient();
        customHeader = "Add New Patient";


    }

    private void PrepareForEdit(Patient patient)
    {
        customHeader = "Edit Patient";
        patientObject = patient;
    }

    private async void DataChanged()
    {
        patients = await service.Get();
        StateHasChanged();
    }
}